// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Observatory.Data;

#nullable disable

namespace Observatory.Data.Migrations
{
    [DbContext(typeof(ObservatoryDbContext))]
    [Migration("20220511071700_InitialPersistedGrantDbMigration")]
    partial class InitialPersistedGrantDbMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Observatory.Models.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("SizeX")
                        .HasColumnType("float");

                    b.Property<double>("SizeY")
                        .HasColumnType("float");

                    b.Property<double>("SizeZ")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("area");
                });

            modelBuilder.Entity("Observatory.Models.Planets", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<string>("InfoLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Mass")
                        .HasColumnType("float");

                    b.Property<string>("Model3d")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("SizeX")
                        .HasColumnType("float");

                    b.Property<double>("SizeY")
                        .HasColumnType("float");

                    b.Property<double>("SizeZ")
                        .HasColumnType("float");

                    b.Property<double>("Temperature")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("planets");
                });

            modelBuilder.Entity("Observatory.Models.Planets", b =>
                {
                    b.HasOne("Observatory.Models.Area", null)
                        .WithMany("Planets")
                        .HasForeignKey("AreaId");
                });

            modelBuilder.Entity("Observatory.Models.Area", b =>
                {
                    b.Navigation("Planets");
                });
#pragma warning restore 612, 618
        }
    }
}
